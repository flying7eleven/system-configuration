#########################################################
# WARNING: This file is manged by an Ansible playbook.  #
#          Do not edit it manually!                     #
#########################################################

# path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# set the name of the theme to load
ZSH_THEME="robbyrussell"

# update automatically without asking
zstyle ':omz:update' mode auto
zstyle ':omz:update' frequency 14

#
COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"

#
DISABLE_UNTRACKED_FILES_DIRTY="false"

#
HIST_STAMPS="dd.mm.yyyy"

# plugins to load
plugins=(
{% if ansible_system == "Darwin" %}
    1password
{% endif %}
    ansible
{% if ansible_system == "Darwin" %}
    brew
{% endif %}
    command-not-found
    direnv
    docker
    docker-compose
    fzf
    git
{% if ansible_system == "Darwin" %}
    macos
{% endif %}
    nmap
    python
    tig
    tmux
{% if zsh_enable_sdkman_support %}
    zsh-sdkman
{% endif %}
    zsh-autosuggestions
    zsh-syntax-highlighting
)

# include the actual oh-my-zsh stuff
source $ZSH/oh-my-zsh.sh

####################################################################################
################################ user configuration ################################
####################################################################################

# source the login configuration into each new shell
source ~/.profile

{% if zsh_aliases is defined and zsh_aliases|length > 0 %}
####################################################################################
################################## useful aliases ##################################
####################################################################################

{% for alias in zsh_aliases %}
# {{ alias.name }}
alias {{ alias.alias }}="{{ alias.command }}"

{% endfor %}
{% endif %}

# FIX for commit signing
export GPG_TTY=$(tty)

{% if zsh_start_tmux_on_shell_init is defined and zsh_start_tmux_on_shell_init %}
####################################################################################
############################# start tmux automatically #############################
####################################################################################
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ] && [ -z "$INTELLIJ_ENVIRONMENT_READER" ] && [ -z "$INTELLIJ_TERMINAL_COMMAND_BLOCKS" ]; then
  exec tmux new-session -A -s main
fi
{% endif %}

{% if ansible_system == "Darwin" %}
# configure the scripts which are able to get the corresponding entries from the installed password manager
export ANSIBLE_VAULT_PASSWORD_FILE=$HOME/.ansible_vault_pass.sh
export ANSIBLE_BECOME_PASSWORD_FILE=$HOME/.ansible_become_pass.sh

#
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"

{% if zsh_enable_nvm_support %}
# Node Version Manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
{% endif %}
{% endif %}

{% if zsh_enable_sdkman_support %}
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
{% endif %}