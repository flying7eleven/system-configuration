---
- name: Running Debian specific setup
  include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Running Arch Linux specific setup
  include_tasks: setup-Arch.yml
  when: ansible_os_family == 'Archlinux'

- name: Running macOS specific setup
  include_tasks: setup-macOS.yml
  when: ansible_os_family == 'Darwin'

- name: Getting or updating oh-my-zsh.
  ansible.builtin.git:
    repo: https://github.com/robbyrussell/oh-my-zsh.git
    dest: "{{ (ansible_os_family == 'Darwin') | ternary('/Users/', '/home/') }}{{ item }}//.oh-my-zsh"
    update: yes
    accept_hostkey: yes
  become: yes
  become_user: "{{ item }}"
  loop: "{{ users_to_configure }}"

- name: Getting or updating zsh-autosuggestions.
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: "{{ (ansible_os_family == 'Darwin') | ternary('/Users/', '/home/') }}{{ item }}//.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    update: yes
    accept_hostkey: yes
  become: yes
  become_user: "{{ item }}"
  loop: "{{ users_to_configure }}"

- name: Getting or updating zsh-sdkman.
  ansible.builtin.git:
    repo: https://github.com/matthieusb/zsh-sdkman.git
    dest: "{{ (ansible_os_family == 'Darwin') | ternary('/Users/', '/home/') }}{{ item }}//.oh-my-zsh/custom/plugins/zsh-sdkman"
    update: yes
    accept_hostkey: yes
  become: yes
  become_user: "{{ item }}"
  loop: "{{ users_to_configure }}"
  when: zsh_enable_sdkman_support

- name: Generating .zshrc
  ansible.builtin.template:
    src: "templates/zshrc.j2"
    dest: "{{ (ansible_os_family == 'Darwin') | ternary('/Users/', '/home/') }}{{ item }}//.zshrc"
    mode: u=rw,g=r,o=
    owner: "{{ item }}"
    group: "{{ (ansible_os_family == 'Darwin') | ternary('staff', item) }}"
  become: yes
  loop: "{{ users_to_configure }}"

- name: Generating .profile
  ansible.builtin.template:
    src: "templates/profile.j2"
    dest: "{{ (ansible_os_family == 'Darwin') | ternary('/Users/', '/home/') }}{{ item }}//.profile"
    mode: u=rw,g=r,o=
    owner: "{{ item }}"
    group: "{{ (ansible_os_family == 'Darwin') | ternary('staff', item) }}"
  become: yes
  loop: "{{ users_to_configure }}"

- name: Set default shell for each user (macOS).
  ansible.builtin.user:
    name: "{{ item }}"
    shell: /opt/homebrew/bin/zsh
  loop: "{{ users_to_configure }}"
  become: yes
  when: ansible_os_family == 'Darwin'

- name: Set default shell for each user (Linux).
  ansible.builtin.user:
    name: "{{ item }}"
    shell: /bin/zsh
  loop: "{{ users_to_configure }}"
  become: yes
  when: ansible_os_family != 'Darwin'